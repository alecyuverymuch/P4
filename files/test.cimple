# Tests comments
// Tests global variable declarations
int abc1;
int abc2;
bool def1;
bool def2;
// Tests struct declarations
struct ghi1 { int z1; bool z2; };
struct ghi2 { int e; bool f; int g; bool h; };
struct ghi3 ghi4;
// Test function declaration
void test1() {}
// Test function declaration with a parameter
void test2(int one) {}
// Test function declaration with multiple parameters
void test3(int one, int two, bool three, bool four){}
// Test function declaration with body
int test4() {
    int x;
    x = 4;
    return x;
}
// Test function declaration with parameters and integer functions
int test5(int x, int i) {
    int y;
    int z;
    y = 1;
    z = 2;
    x++;
    x--;
    x = 4 + 4;
    x = 4 * 4;
    x = 4 - 4;
    x = 4 / 4;
    x = y;
    x = x + y * z - 2 * 4;
    x = (x + y) * ((z - 2) - (2 * 4));
    return i;
}
// Tests function with bool functions
bool test6(bool x, bool y) {
    bool z;
    z = true;
    z = false;
    z = x || y;
    z = x && y;
    z = x && y || z;
    z = !x;
    z = !x || y;
    z = !(x || (y && z));
    return z;
}
// Tests function with comparisons
bool test7(int x, int y, int z) {
    bool a;
    a = x > y;
    a = x < y;
    a = x >= y;
    a = x <= y;
    a = x == y;
    a = x != y;
    a = x + 1 == y * 2;
    a = x > y && x > z || y < z;
    a = !(x + 2 > 0 || y <= z* 4 && z < 2 + 2);
    return a;
}
// Tests cin
bool test8() {
    int k; 
    cin >> k;
} 
// Tests cout
void test9(int l) {
    cout << l;
}
// Tests if statements
void test10(int l) {
    if (l >= 6) {
        return true;
    }
}
int test11(int l) {
    if (l <= 6) {
        return;
    }
}
// Tests if else statements with calls to functions (with and without parameters)
bool test12(bool m, int n, int o) {
    if (n<o) {
        test8();
    }
    else {
        test9(n);
    }
    return 5*10;
}
// Tests while statements
void test13(int j, bool k, int l, bool m) {
    while ((k||m)&&true) {
        bool x; 
        x = 7 != 7; 
    }
    return 6/7;
}
// Tests a large expression
int test14(int s,bool t) {
    t = !((7 + x - 5 * 4 / 2) == true) && (7 <=5 )||(7 != 7)||(7 <5 )||(7 >=5 )||(7 >5 );
}
// Tests dot operator
bool test15(bool b){
    int x; 
    x = b.c.v;
}
// Tests strings
bool test16(bool b){
    int x; 
    x = "hello" + "string"; 
}
// Tests nested statements
bool test17(bool b){
    int x; 
    while(true || false && true){
        if(true){
            if(false){
                while(true){
                }
            }
        }
    }
}
// Comprehensive Tests
int main() { 
    int a1; # comment
    int a2;
    int a3;
    bool b1;
    bool b2;
    bool b3;
    a1 = 1 + 2 * 3 * ( 3 - 1 ) / 3;
    b1 = false || true && false;
    b2 = a1 >= a2 || a1 <= a2 || a1 < a2 || a1 > a2 || a1 != a2;
    x = 1; 
    y = true; 
    if (y) { 
        return; 
    } 
    if (!b1) {
        int c;
        bool d;
        c = 3;
        d = true && false;
        if (b2) {
            while (d) {
                c++;
            }
            return c + 1;
        }
        else {
            return c - 1;
        }
    }
    while (a1 > a2) {
        int x;
        x = a1.a2.a3;
        a1 = x;
    }
}
